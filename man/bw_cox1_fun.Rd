% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bw_cox1_fun.R
\name{bw_cox1_fun}
\alias{bw_cox1_fun}
\title{coxph model with backward elimination using AIC}
\usage{
bw_cox1_fun(
  r,
  data,
  cvK,
  fitform_ogl,
  formula1,
  formula2,
  formula3,
  formula4,
  timess
)
}
\arguments{
\item{r}{a numeric value, a seed to run this method}

\item{data}{a dataframe, the data used to performance this survival model}

\item{cvK}{a numeric value, cross-validation fold}

\item{fitform_ogl}{a Surv object from package survival, the survival function}

\item{formula1}{a Surv object from package survival, to calculate a version of the brier score, details please check package pec}

\item{formula2}{a Surv object from package survival, to calculate a version of the brier score, details please check package pec}

\item{formula3}{a Surv object from package survival, to calculate a version of the brier score, details please check package pec}

\item{formula4}{a Surv object from package survival, to calculate a version of the brier score, details please check package pec}

\item{timess}{a numeric vector of length 15, contains time points to get the time-dependent AUC values}
}
\value{
a data.frame with allevaluation measurements in all columns and rows are each fold results from cross-validation
}
\description{
coxph model with backward elimination using AIC
}
\examples{
data("exampledt2", package = "SurvBenchmark")

xnam <- paste(colnames(veteran)[c(1,2,5,6,7,8)], sep="")
form=as.formula(paste("survival::Surv(time, status)~ ", paste(xnam, collapse= "+")))
fitform_ogl=form
formula1=fitform_ogl
formula2=fitform_ogl
formula3=survival::Surv(time,status)~1
formula4=survival::Surv(time,status)~1
timess=seq(as.numeric(summary(veteran$time)[2]),as.numeric(summary(veteran$time)[5]),(as.numeric(summary(veteran$time)[5])-as.numeric(summary(veteran$time)[2]))/14)
want=bw_cox1_fun(1,veteran,5,fitform_ogl,formula1,formula2,formula3, formula4, timess);
}
